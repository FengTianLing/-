1.标签的分类
    1.1:块元素 div p h1 .... 
    1.2:行元素 span a 
    1.3:行内块元素 img input

    块元素
    1.独占一行
    2.嵌套关系下,子块元素默认使用父块元素的宽度

    行内元素
    1.默认是内容撑开宽高,不能定义盒子宽高
    2.在一行上显示

    行内块元素
    1.在一行上显示
    2.可以使用宽高

2.块行元素之间的互相转换display:inline|block|inline-block
    2.1:块元素转行元素 display:iniline;
    2.2:行元素转块元素 display:block;
    2.3:元素转换为行内块元素 display:inline-block


3.样式的特性
    3.1:样式的层叠性:当多个样式作用于同一个(同一类选择器)标签,样式发生冲突,后面代码层叠前面的代码
    3.2:样式的继承性:子元素标签会继承父标签的文本样式.特殊标签带有默认样式的无法继承,比如<a></a>
    3.3:样式的优先级:默认样式 < 标签选择器 < 类选择器 < id选择器 < 行内样式 < !important
                         0           1           10      100        1000        1000+
        !important 可以改变样式的优先级,写到属性后面,把优先级提到最高

    权重
    1.继承的权重为0 ;子元素如果没定义样式,使用父级样式。如果定义了,使用自己定义的
    2.权重会叠加

4.链接的伪类
    4.1: a:link{属性:值;} = a{属性:值;} 。超链接的默认状态
         a:visited{属性:值;} 超链接访问后的状态
         a:hover{属性:值;} 鼠标悬停的状态
         a:active{属性:值;} 鼠标点击时候的状态;起作用的
         :focus{属性:值;} 获取光标的焦点
         :after{属性:值;} 在之后插入一个伪标签

5.行高
    5.1:line-height:值;
    5.2:文字基线与基线的距离就是行高
    5.3:文字大小+上边距+下边距=行高
    5.4:一行文字的行高与父元素一致,内容垂直剧中
    5.5:行高的单位决定行高的多少;单位除了像素意外,行高都是与文字乘积
        行高会继承;不带单位时,是和子元素的文字大小相乘得到行高


6.盒子模型 边框
    6.1:
    margin:外边距。控制盒子与盒子之间的距离
    padding:内边距。控制盒子与内容之间的距离

    6.3
        6.3.1:盒子的实际宽度=内容区域+内边距+border;   内容盒子+内边距盒子+边框盒子
        6.3.2:设置内边距会撑大盒子。继承的盒子水平方向一般不会被撑大
        6.3.3:垂直方向的两个盒子,如何都设置了垂直方向的外边距,取得是设置比较大的值
        6.3.4:外边距塌陷.嵌套盒子,直接给子盒子设置垂直方向外边距,会造成塌陷。解决给父盒子加overflow:hidden;属性。涉及到bfc格式化上下文
    6.4
    box-sizing:content-box | border-box | padding-box 盒子属性
    默认是content-box 为加模式
    一旦设置成 border-box 整个盒子的实际大小为width大小 减小内容区域 内减模式
    6.5 
    backface-visibility:hidden; 让盒子的背面不可见


overflow:visible | hidden | scroll | auto  内容溢出处理 
通俗点讲,当超出盒子的内容,超出部分内容隐藏不显示
    
7.盒子的特性
    7.1:撑开和撑破盒子是两码事;不给高度是撑开,给了高度,元素超出是撑破
    7.2:浮动的盒子互相影响,不管是否在同一个盒子中



