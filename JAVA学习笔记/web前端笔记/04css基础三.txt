1.文档流布局(标准流)
    元素自上而下,自左而右。块元素独占一行,行内元素一行上显示,
    碰到父级元素的边框自动换行。

2.浮动
    float: left | right 元素浮动
    2.1:特点
        元素脱离原来的位置;
        元素变成行内块元素;
    2.2:作用
        文本绕图;制作导航;网页布局
    2.3:给相邻的两个同级盒子设置浮动,会顶端对齐

3.清除浮动
    3.1:在最后一个浮动元素后面添加标签<div style="clear:both"></div>,告诉浏览器这个标签后边的元素从这里开始展示
    3.2:给浮动元素的父级标签添加 overflow:hidden 属性
    3.3:伪元素清除浮动 .clearfix:after{}; 作用到浮动的父级标签上.意思是在这个元素后面插入一个隐藏标签
    .clearfix:after{
        content:"";
        display:block;
        line-height:0;
        height:0px;
        visibility:hiddent;
        clear:both;
    }
    /*在添加浏览器兼容*/
    .clearfix{zoom:1;}


4.定位 position: static | absolute | relative | fixed
    4.1:静态定位: static 默认值;就是标志文档流(元素默认在的位置)
    4.2:绝对定位: absolute 根据浏览器来定位元素;会脱离文档流,不占据原来的位置
    4.3:相对定位: relative 
    4.4:固定定位: fixed 
    4.5:定位的方向: left | right | top | bottom 方向属性,固定元素的位置
    4.6:设置了定位,如果不给left/top会出现bug,会给padding和行内元素留出位置
    4.7：left和top的权重要高于right和bottom



属性
    z-index:1 调整元素的层叠顺序



绝对定位
1.当元素使用绝对定位,会脱离文档流,不占据原来的位置
2.默认情况下 和 父级元素没有使用绝对定位情况下,子元素根据浏览器来定位元素
3.父级元素使用了绝对定位,子元素使用决定定位,子元素根据父元素来定位
4.使用绝对定位,元素会变成行内块元素

相对定位
1.相对于自身出发;还占据着原来的位置
2.子绝父相:子元素绝对定位,父元素相对定位(常用)

固定定位
1.当元素使用固定定位,会脱离文档流,不占据原来的位置
2.使用绝对定位,元素会变成行内块元素
3.与绝对定位不同,滚动条活动的时候，不会改变元素的定位位置


5.定位的盒子居中
    5.1:定位的盒子脱离了文档流,所以不能使用margin:0 auto;
    5.2:先定位浏览器距左50%,在margin-left:-元素大小/2

6.标签的包含规范

7.规避脱标流
    尽量避免脱标,使用标准流
    标准流解决不了使用浮动
    浮动解决不了才用定位

8.层级问题
    8.1:层级一样,越往后的盒子,层级越高
    8.2:标准流<浮动<定位
    8.3:除标准留之外的盒子，给层级一定要加定位
    8.4:给定z-index的值为层级的值(不给默认0)
    (层级为0的盒子,也比标准流和浮动的高)
    (层级为负数的盒子,比标准流和浮动低)
    (层级不取小数)


9.私有化前缀:解决兼容性问题
    9.1 -webkit-  谷歌
    9.2 -moz- 火狐
    9.3 -ms- IE 
    9.4 -o- 欧鹏浏览器
    9.5 把兼容写法都写上,最后在加一个正常的写法,就是没有前缀的写法
    例子: backgroun:-webkit-linear-gradient(left,red,blue)  背景渐变色
    
