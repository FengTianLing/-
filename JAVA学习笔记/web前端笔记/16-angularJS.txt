 AngularJs
1.Google公司开发维护的前端的MVC框架

特点:
1.Jquery是咦个类库,以DOM作为核心
2.A是诸多类库的集合,以数据和逻辑做为核心
2.模块化，双向绑定,语义化标签,依赖注入等
3.与之类似的还有BacakBone,KonckouJS,vue,React等

下载
1.方式一npm installl angular
1.方式二bower installl angular

使用
1.AngularJS 通过 ng-directives(指令) 扩展了 HTML。
ng-app:指定应用程序指令
ng-model:绑定应用内部的指令,用来绑定元素值(输入域)
ng-bind 指令 {{}}   给显示用的


内置指令
ng-init 初始化模型,也就是$scope;用来初始化数据 "key=val;key2=val"形式赋值
ng-repeat 循环指令
ng-hide 控制元素是否现实 true 现实 false 隐藏
ng-if 控制元素是否存在 true 存在 false 不存在
ng-src 增强图片路径
ng-href 增强地址
ng-class 控制类名 要给对象{} 例如{red:true} red是存在的类明
ng-include 引入模板
ng-disabled 表单禁用
ng-readonly 表单只读
ng-checked 单/复框是否选中
ng-selected 下拉选是否选中

区别
1.ng-hide ng-show ng-if 前两个修改样式隐藏 if是直接删除标签


自定义指令:有些情况下,内置指令无法满足我们的需求
directives('指令名称',fn);自定义指令的方法


数据绑定
1.数据绑定是指模型数据 与 数据相应的试图进行关联
2.数据绑定分 单向绑定 双向绑定
3.模型数据 通过 控制器  转发到 试图的过程

单向绑定
1.单向绑定是 模型数据,按着写好的试图模板 生成HTML标签,然后追加到DOM中。
2.模型数据到试图 的活动 就是单向
3.通过{{}}或者ng-bind来实现绑定,模型的数据通过内置模型对象$scope提供数据,
为这个对象添加属性或者方法就可以在相应的视图模块里被访问。

注意:使用{{}}绑定数据会有'闪烁'现象,添加ng-cloak也可以解决绑定'闪烁'问题。
通过ng-bind-template可以绑定多个数据,例如ng-bind-template="{{name}}{{age}}"




双向绑定
1.模型数据可以传到视图上,也可以视图数据传到模型上
2.要实现数据从视图向模型传递【必需】要借助与表单元素
3.通过ng-model来绑定,绑定在表单上
4.表单数据通过ng-model传递到模型对象上,在通过{{}}把模型数据传递到视图上的过程就是双向绑定


作用域
1.$scope的作用域和JS代码的作用域是一样的
2.$scope的属性访问和JS变量访问作用域一样

根作用域
一个应用app 在启动时会自动创建一个根作用域$rootScope
这个作用域在整个应用范围ng-app所在标签以内都可以被访问到。

子作用域
就是app标签中下的Controlle 
通过ng-controller指令可以创建一个子作用域

内置过滤器(管道)
1.过滤器用来格式化数据的
2.在{{}}中使用 |  来调用过滤器 使用 : 传递参数
命令
currency 将数字格式化为货币格式
date 格式化日期
filter 在给定数组中选择满足条件的一个子集,并且返回一个心的数组,其条件可以是一个字符串、对象、函数
json 将javascript对象转成json字符串 
limitTo 取出字符串或数组的前(正数)
lowercase 英文转小写
uppercase 英文转大写
orderBy 对数组进行排序 第一个参数控制排序字段;第二参数可控制方向
number 数字格式化,可控制小数位数

自定义过滤器
实现 filter方法

依赖注入
1.开发使用angular进行开发时,需要用angular事先提供的模块,开发自己的业务逻辑
2.ng提供了一些内置模块(类)
3.行内式注入,推断式注入
4.尽量不要推断式注入,如js代码压缩的时候,就找不到依赖


内置服务
1.$location
2.$scope
3.$http:特别注意,请求头设置不同,请求参数书写不同
4.$filter:是一个函数 例如: $filter('currency')(val);
5.$log:它的方法和java的日志方法一样 info,warn,error...

自定义服务
1.实现factory
2.实现service
3.实现value

配置块:查文档,开发中很少用到
运行块:直接运行相应服务模块,ng提供了run方法来实现
不需要绑定控制器依赖,可以使用run来独立运行

路由:一个应用是由多个视图组合成的,根据不同的业务逻辑展示给用户
不同的视图,路由则实现这个功能的关键
1.锚点就是前端的路由功能(重点描述)
2.监听锚点变化来请求数据
3.hashchange事件来监听锚点
4.路由模块插件需要下载

SPA:指通过单一个页面展示所有功能,同过ajax动态获取数据然后进行实时渲染
结合CSS3动态模仿原生APP交换,然后在


ng对Jquery的支持
1. angluar.element() 方法可以将一个原生的DOM对象转成JQ对象
2.ng只是实现了[部分]的JQ的方法



雅虎十三条: